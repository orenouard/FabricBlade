#ifndef __KL2EDK_AUTOGEN_Vec3_d__
#define __KL2EDK_AUTOGEN_Vec3_d__

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2exe version 1.11.4
////////////////////////////////////////////////////////////////

#include <Fabric/EDK/EDK.h>
#if FABRIC_EDK_VERSION_MAJ != 1 || FABRIC_EDK_VERSION_MIN != 11
# error "This file needs to be rebuilt for the current EDK version!"
#endif

#include "global.h"

namespace Fabric { namespace EDK { namespace KL {

// KL struct 'Vec3_d'
// Defined at Vec3_d.kl:16:1

struct Vec3_d
{
  typedef Vec3_d &Result;
  typedef Vec3_d const &INParam;
  typedef Vec3_d &IOParam;
  
  Float64 x;
  Float64 y;
  Float64 z;
};

inline void Traits<Vec3_d>::ConstructEmpty( Vec3_d &val )
{
  Traits< Float64 >::ConstructEmpty( val.x );
  Traits< Float64 >::ConstructEmpty( val.y );
  Traits< Float64 >::ConstructEmpty( val.z );
}
inline void Traits<Vec3_d>::ConstructCopy( Vec3_d &lhs, Vec3_d const &rhs )
{
  Traits< Float64 >::ConstructCopy( lhs.x, rhs.x );
  Traits< Float64 >::ConstructCopy( lhs.y, rhs.y );
  Traits< Float64 >::ConstructCopy( lhs.z, rhs.z );
}
inline void Traits<Vec3_d>::AssignCopy( Vec3_d &lhs, Vec3_d const &rhs )
{
  Traits< Float64 >::AssignCopy( lhs.x, rhs.x );
  Traits< Float64 >::AssignCopy( lhs.y, rhs.y );
  Traits< Float64 >::AssignCopy( lhs.z, rhs.z );
}
inline void Traits<Vec3_d>::Destruct( Vec3_d &val )
{
  Traits< Float64 >::Destruct( val.z );
  Traits< Float64 >::Destruct( val.y );
  Traits< Float64 >::Destruct( val.x );
}
}}}

#endif // __KL2EDK_AUTOGEN_Vec3_d__
